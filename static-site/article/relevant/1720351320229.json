{"relevantArticles":[{"articleTitle":"数字电子技术基础重点","articleAbstractText":"DownLoad : 点此下载 概览 数字电子技术基础涉及数制和码制的转换、二进制运算以及逻辑代数基础等多个方面。以下是内容的详细叙述： 第一章 数制和码制 在数字电子技术中，了解不同数制之间如何转换是非常重要的。这包括十进制到任意进制的转换、任意进制转十进制，以及二进制与十六进制之间的互相转换。这些转换涉及到整数部分和小数部分的分别处理，其中包含了连续除法和连续乘法的应用。例如，将十进制小数转换为二进制时，需要分别对小数部分进行乘以目标进制基数的操作，并取整数部分作为结果，重复此过程直至小数部分为0或达到所需精度。 第二章 逻辑代数基础 逻辑代数是数字电路设计的基础之一，它包括基本运算（如与运算、或运算和非运算）和常用运算（如与非运算、或非运算等）。掌握这些基础运算有助于理解和设计复杂的逻辑电路。此外，逻辑函数的最小项表达式和反演定理（摩根定理）对于简化逻辑表达式也非常重要。 第三章 门电路 门电路是构成数字逻辑电路的基本单元，常见的有正负逻辑的概念、OC门、OD门、TG门以及三态门的特点等。这些门电路在数字信号的处理和传输中起到关键作用。例如，OC门可以实现\u201c线与\u201d逻辑，而三态门则....","articleStatus":0,"articlePermalink":"/articles/2024/07/09/1720536942224.html","articleImg1URL":"https://b3logfile.com/bing/20190915.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"C++第4章示例程序","articleAbstractText":"4.2 #include&lt;iostream&gt; using namespace std; class Complex{ public: Complex(){real=0;imag=0;} Complex(double r,double i){real=r;imag=i;} Complex operator+(Complex &amp;c2); void display(); private: double real; double imag; }; Complex Complex::operator+(Complex &amp;c2) { Complex c; c.real=real+c2.real; c.imag=imag+c2.imag; return c; } void Complex::display() { cout&lt;&lt;\"(\"&lt;&lt;real&lt;&lt;\",\"&lt;&lt;imag&lt;&lt;\"i)\"&lt;&lt;endl; } int main() { Complex c1(3,4),c2(5,-10),c3; c3=c1+c2;.....","articleStatus":0,"articlePermalink":"/articles/2024/07/08/1720385553231.html","articleImg1URL":"https://b3logfile.com/bing/20221203.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"C++的类","articleAbstractText":"array_max.h //array_max.h #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; class Array_max { public: void set_value() { for(int i=0;i&amp;lt;10;i++) { cin&amp;gt;&amp;gt;array[i]; } }; void max_value() { max=array[0]; for(int i=0;i&amp;lt;10;i++) { if(array[i]&amp;gt;max)max=array[i]; } }; void show_value() { cout&amp;lt;&amp;lt;\"max=\"&amp;lt;&amp;lt;max; }; private: int array[10]; int max; }; array_max.cpp //array_max.cpp #include &amp;lt;iostream&amp;gt; #include \"array_max.h\" /* r.....","articleStatus":0,"articlePermalink":"/articles/2024/03/20/1710948378127.html","articleImg1URL":"https://b3logfile.com/bing/20181117.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"C++程序设计课后题","articleAbstractText":"P36 10. #include&lt;iostream&gt; #include&lt;string&gt; using namespace std; int main() { string a,b; a=\"abcd\"; b=\"qwer\"; a=a+b; cout&lt;&lt;a; return 0; } 11. #include&lt;iostream&gt; #include&lt;string&gt; using namespace std; int main() { string a; cin &gt;&gt; a; for (int i = (a.size()-1); i &gt;= 0; i--) { cout &lt;&lt; a[i]; } cout &lt;&lt; endl; return 0; } 13. #include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;algorithm&gt; using namespace std; // 重载函数，用于整数排序 void sortData(......","articleStatus":0,"articlePermalink":"/articles/2024/03/19/1710858112099.html","articleImg1URL":"https://b3logfile.com/bing/20190306.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}