{"relevantArticles":[{"articleTitle":"C++第4章示例程序","articleAbstractText":"4.2 #include&lt;iostream&gt; using namespace std; class Complex{ public: Complex(){real=0;imag=0;} Complex(double r,double i){real=r;imag=i;} Complex operator+(Complex &amp;c2); void display(); private: double real; double imag; }; Complex Complex::operator+(Complex &amp;c2) { Complex c; c.real=real+c2.real; c.imag=imag+c2.imag; return c; } void Complex::display() { cout&lt;&lt;\"(\"&lt;&lt;real&lt;&lt;\",\"&lt;&lt;imag&lt;&lt;\"i)\"&lt;&lt;endl; } int main() { Complex c1(3,4),c2(5,-10),c3; c3=c1+c2;.....","articleStatus":0,"articlePermalink":"/articles/2024/07/08/1720385553231.html","articleImg1URL":"https://b3logfile.com/bing/20221203.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"C++程序设计第6章大程序","articleAbstractText":"这段代码中包含了许多面向对象编程和C++语言的知识点，以下是详细的解释： 类的定义和继承： Shape是一个基类，定义了所有形状都应该具有的基本属性和行为。它包含虚函数area()和volume()，以及纯虚函数shapeName()。虚函数使得派生类可以重写这些函数，以提供具体的实现，而纯虚函数则要求任何直接继承自Shape的派生类都必须提供shapeName()的具体实现。 Point, Circle, 和 Cylinder都是从Shape类派生出来的子类，分别表示点、圆和圆柱体。这些类通过公有继承(public Shape)来继承Shape类的属性和方法。 构造函数： 每个类都有构造函数来初始化其成员变量。例如，Point类有一个带有两个参数的构造函数，用于初始化点的坐标。Circle类有一个带有三个参数的构造函数，用于初始化圆心坐标和半径。 虚函数： 在基类Shape中定义了虚函数area()和volume()，这些函数在派生类中被重写。这样做的目的是允许通过基类指针或引用调用派生类的相应函数，实现多态。例如，Circle类和Cylinder类都重写了ar....","articleStatus":0,"articlePermalink":"/articles/2024/07/07/1720351320229.html","articleImg1URL":"https://b3logfile.com/bing/20200602.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"C++的类","articleAbstractText":"array_max.h //array_max.h #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; class Array_max { public: void set_value() { for(int i=0;i&amp;lt;10;i++) { cin&amp;gt;&amp;gt;array[i]; } }; void max_value() { max=array[0]; for(int i=0;i&amp;lt;10;i++) { if(array[i]&amp;gt;max)max=array[i]; } }; void show_value() { cout&amp;lt;&amp;lt;\"max=\"&amp;lt;&amp;lt;max; }; private: int array[10]; int max; }; array_max.cpp //array_max.cpp #include &amp;lt;iostream&amp;gt; #include \"array_max.h\" /* r.....","articleStatus":0,"articlePermalink":"/articles/2024/03/20/1710948378127.html","articleImg1URL":"https://b3logfile.com/bing/20181117.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"C++程序设计课后题","articleAbstractText":"P36 10. #include&lt;iostream&gt; #include&lt;string&gt; using namespace std; int main() { string a,b; a=\"abcd\"; b=\"qwer\"; a=a+b; cout&lt;&lt;a; return 0; } 11. #include&lt;iostream&gt; #include&lt;string&gt; using namespace std; int main() { string a; cin &gt;&gt; a; for (int i = (a.size()-1); i &gt;= 0; i--) { cout &lt;&lt; a[i]; } cout &lt;&lt; endl; return 0; } 13. #include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;algorithm&gt; using namespace std; // 重载函数，用于整数排序 void sortData(......","articleStatus":0,"articlePermalink":"/articles/2024/03/19/1710858112099.html","articleImg1URL":"https://b3logfile.com/bing/20190306.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}